# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_param_DRAMCtrl', [dirname(__file__)])
        except ImportError:
            import _param_DRAMCtrl
            return _param_DRAMCtrl
        if fp is not None:
            try:
                _mod = imp.load_module('_param_DRAMCtrl', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _param_DRAMCtrl = swig_import_helper()
    del swig_import_helper
else:
    import _param_DRAMCtrl
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import m5.internal.enum_AddrMap
import m5.internal.enum_MemSched
import m5.internal.enum_PageManage
import m5.internal.param_AbstractMemory
import m5.internal.param_MemObject
import m5.internal.param_ClockedObject
import m5.internal.param_ClockDomain
import m5.internal.param_SimObject
import m5.internal.drain
import m5.internal.serialize
class DRAMCtrl(m5.internal.param_AbstractMemory.AbstractMemory):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
DRAMCtrl_swigregister = _param_DRAMCtrl.DRAMCtrl_swigregister
DRAMCtrl_swigregister(DRAMCtrl)

class DRAMCtrlParams(m5.internal.param_AbstractMemory.AbstractMemoryParams):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def create(self):
        return _param_DRAMCtrl.DRAMCtrlParams_create(self)
    IDD0 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD0_get, _param_DRAMCtrl.DRAMCtrlParams_IDD0_set)
    IDD02 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD02_get, _param_DRAMCtrl.DRAMCtrlParams_IDD02_set)
    IDD2N = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD2N_get, _param_DRAMCtrl.DRAMCtrlParams_IDD2N_set)
    IDD2N2 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD2N2_get, _param_DRAMCtrl.DRAMCtrlParams_IDD2N2_set)
    IDD2P0 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD2P0_get, _param_DRAMCtrl.DRAMCtrlParams_IDD2P0_set)
    IDD2P02 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD2P02_get, _param_DRAMCtrl.DRAMCtrlParams_IDD2P02_set)
    IDD2P1 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD2P1_get, _param_DRAMCtrl.DRAMCtrlParams_IDD2P1_set)
    IDD2P12 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD2P12_get, _param_DRAMCtrl.DRAMCtrlParams_IDD2P12_set)
    IDD3N = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD3N_get, _param_DRAMCtrl.DRAMCtrlParams_IDD3N_set)
    IDD3N2 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD3N2_get, _param_DRAMCtrl.DRAMCtrlParams_IDD3N2_set)
    IDD3P0 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD3P0_get, _param_DRAMCtrl.DRAMCtrlParams_IDD3P0_set)
    IDD3P02 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD3P02_get, _param_DRAMCtrl.DRAMCtrlParams_IDD3P02_set)
    IDD3P1 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD3P1_get, _param_DRAMCtrl.DRAMCtrlParams_IDD3P1_set)
    IDD3P12 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD3P12_get, _param_DRAMCtrl.DRAMCtrlParams_IDD3P12_set)
    IDD4R = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD4R_get, _param_DRAMCtrl.DRAMCtrlParams_IDD4R_set)
    IDD4R2 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD4R2_get, _param_DRAMCtrl.DRAMCtrlParams_IDD4R2_set)
    IDD4W = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD4W_get, _param_DRAMCtrl.DRAMCtrlParams_IDD4W_set)
    IDD4W2 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD4W2_get, _param_DRAMCtrl.DRAMCtrlParams_IDD4W2_set)
    IDD5 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD5_get, _param_DRAMCtrl.DRAMCtrlParams_IDD5_set)
    IDD52 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD52_get, _param_DRAMCtrl.DRAMCtrlParams_IDD52_set)
    IDD6 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD6_get, _param_DRAMCtrl.DRAMCtrlParams_IDD6_set)
    IDD62 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_IDD62_get, _param_DRAMCtrl.DRAMCtrlParams_IDD62_set)
    VDD = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_VDD_get, _param_DRAMCtrl.DRAMCtrlParams_VDD_set)
    VDD2 = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_VDD2_get, _param_DRAMCtrl.DRAMCtrlParams_VDD2_set)
    activation_limit = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_activation_limit_get, _param_DRAMCtrl.DRAMCtrlParams_activation_limit_set)
    addr_mapping = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_addr_mapping_get, _param_DRAMCtrl.DRAMCtrlParams_addr_mapping_set)
    bank_groups_per_rank = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_bank_groups_per_rank_get, _param_DRAMCtrl.DRAMCtrlParams_bank_groups_per_rank_set)
    banks_per_rank = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_banks_per_rank_get, _param_DRAMCtrl.DRAMCtrlParams_banks_per_rank_set)
    burst_length = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_burst_length_get, _param_DRAMCtrl.DRAMCtrlParams_burst_length_set)
    channels = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_channels_get, _param_DRAMCtrl.DRAMCtrlParams_channels_set)
    device_bus_width = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_device_bus_width_get, _param_DRAMCtrl.DRAMCtrlParams_device_bus_width_set)
    device_rowbuffer_size = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_device_rowbuffer_size_get, _param_DRAMCtrl.DRAMCtrlParams_device_rowbuffer_size_set)
    device_size = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_device_size_get, _param_DRAMCtrl.DRAMCtrlParams_device_size_set)
    devices_per_rank = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_devices_per_rank_get, _param_DRAMCtrl.DRAMCtrlParams_devices_per_rank_set)
    dll = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_dll_get, _param_DRAMCtrl.DRAMCtrlParams_dll_set)
    max_accesses_per_row = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_max_accesses_per_row_get, _param_DRAMCtrl.DRAMCtrlParams_max_accesses_per_row_set)
    mem_sched_policy = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_mem_sched_policy_get, _param_DRAMCtrl.DRAMCtrlParams_mem_sched_policy_set)
    min_writes_per_switch = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_min_writes_per_switch_get, _param_DRAMCtrl.DRAMCtrlParams_min_writes_per_switch_set)
    page_policy = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_page_policy_get, _param_DRAMCtrl.DRAMCtrlParams_page_policy_set)
    ranks_per_channel = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_ranks_per_channel_get, _param_DRAMCtrl.DRAMCtrlParams_ranks_per_channel_set)
    read_buffer_size = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_read_buffer_size_get, _param_DRAMCtrl.DRAMCtrlParams_read_buffer_size_set)
    static_backend_latency = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_static_backend_latency_get, _param_DRAMCtrl.DRAMCtrlParams_static_backend_latency_set)
    static_frontend_latency = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_static_frontend_latency_get, _param_DRAMCtrl.DRAMCtrlParams_static_frontend_latency_set)
    tBURST = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tBURST_get, _param_DRAMCtrl.DRAMCtrlParams_tBURST_set)
    tCCD_L = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tCCD_L_get, _param_DRAMCtrl.DRAMCtrlParams_tCCD_L_set)
    tCK = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tCK_get, _param_DRAMCtrl.DRAMCtrlParams_tCK_set)
    tCL = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tCL_get, _param_DRAMCtrl.DRAMCtrlParams_tCL_set)
    tCS = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tCS_get, _param_DRAMCtrl.DRAMCtrlParams_tCS_set)
    tRAS = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tRAS_get, _param_DRAMCtrl.DRAMCtrlParams_tRAS_set)
    tRCD = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tRCD_get, _param_DRAMCtrl.DRAMCtrlParams_tRCD_set)
    tREFI = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tREFI_get, _param_DRAMCtrl.DRAMCtrlParams_tREFI_set)
    tRFC = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tRFC_get, _param_DRAMCtrl.DRAMCtrlParams_tRFC_set)
    tRP = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tRP_get, _param_DRAMCtrl.DRAMCtrlParams_tRP_set)
    tRRD = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tRRD_get, _param_DRAMCtrl.DRAMCtrlParams_tRRD_set)
    tRRD_L = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tRRD_L_get, _param_DRAMCtrl.DRAMCtrlParams_tRRD_L_set)
    tRTP = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tRTP_get, _param_DRAMCtrl.DRAMCtrlParams_tRTP_set)
    tRTW = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tRTW_get, _param_DRAMCtrl.DRAMCtrlParams_tRTW_set)
    tWR = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tWR_get, _param_DRAMCtrl.DRAMCtrlParams_tWR_set)
    tWTR = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tWTR_get, _param_DRAMCtrl.DRAMCtrlParams_tWTR_set)
    tXAW = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tXAW_get, _param_DRAMCtrl.DRAMCtrlParams_tXAW_set)
    tXP = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tXP_get, _param_DRAMCtrl.DRAMCtrlParams_tXP_set)
    tXPDLL = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tXPDLL_get, _param_DRAMCtrl.DRAMCtrlParams_tXPDLL_set)
    tXS = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tXS_get, _param_DRAMCtrl.DRAMCtrlParams_tXS_set)
    tXSDLL = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_tXSDLL_get, _param_DRAMCtrl.DRAMCtrlParams_tXSDLL_set)
    write_buffer_size = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_write_buffer_size_get, _param_DRAMCtrl.DRAMCtrlParams_write_buffer_size_set)
    write_high_thresh_perc = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_write_high_thresh_perc_get, _param_DRAMCtrl.DRAMCtrlParams_write_high_thresh_perc_set)
    write_low_thresh_perc = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_write_low_thresh_perc_get, _param_DRAMCtrl.DRAMCtrlParams_write_low_thresh_perc_set)
    port_port_connection_count = _swig_property(_param_DRAMCtrl.DRAMCtrlParams_port_port_connection_count_get, _param_DRAMCtrl.DRAMCtrlParams_port_port_connection_count_set)

    def __init__(self):
        this = _param_DRAMCtrl.new_DRAMCtrlParams()
        try:
            self.this.append(this)
        except Exception:
            self.this = this
    __swig_destroy__ = _param_DRAMCtrl.delete_DRAMCtrlParams
    __del__ = lambda self: None
DRAMCtrlParams_swigregister = _param_DRAMCtrl.DRAMCtrlParams_swigregister
DRAMCtrlParams_swigregister(DRAMCtrlParams)



