
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'l\x16\x9efz%\xc1\x8b\xa8O\x02{\x0b\xd1qJ'
    
_lr_action_items = {'PEEK':([179,247,248,253,293,299,321,345,352,355,366,368,369,370,372,375,376,],[242,242,-95,-80,-79,-86,-94,-87,-92,-96,-88,-90,-97,-98,-91,-89,-93,]),'TRANS':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[8,8,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,8,-18,-16,-79,-20,8,-19,-21,-13,-8,-15,-12,-9,-11,]),'STAR':([5,11,20,22,61,81,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,185,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,227,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,33,-62,-61,-60,128,-136,-135,-112,-104,-101,-134,-103,-107,-139,147,-137,-106,147,147,147,-102,-130,-127,147,128,147,-108,-131,-138,147,147,-113,147,147,147,147,147,147,147,147,-114,147,147,33,147,-132,-110,-133,-105,147,-134,147,147,147,-109,-99,-111,147,-100,147,]),'SLASH':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,157,-137,-106,157,157,157,-102,-130,-127,157,157,-108,-131,-138,157,157,-113,157,157,157,157,157,157,157,157,-114,157,157,157,-132,-110,-133,-105,157,-134,157,157,157,-109,-99,-111,157,-100,157,]),'FLOATNUMBER':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,248,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-95,-80,83,83,83,83,-79,83,-86,83,-94,83,-87,-92,-96,83,-88,-90,-97,-98,-91,-89,-93,]),'VOID':([0,1,2,5,7,15,45,56,62,73,120,149,161,172,178,220,229,230,233,235,237,238,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[3,3,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,3,-10,-33,-17,3,-26,3,-27,-28,-14,-80,-41,-36,-38,-40,-35,-37,3,-18,-16,-79,-20,3,-19,-21,-13,-8,-15,-12,-9,-11,]),'GLOBAL':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[4,4,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,4,-18,-16,-79,-20,4,-19,-21,-13,-8,-15,-12,-9,-11,]),'NUMBER':([54,88,89,91,98,103,105,123,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,188,243,247,248,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[84,84,84,84,84,84,84,182,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,257,84,84,-95,-80,84,84,84,84,-79,84,-86,84,-94,84,-87,-92,-96,84,-88,-90,-97,-98,-91,-89,-93,]),',':([5,20,22,32,44,45,46,48,49,55,58,59,60,61,63,64,65,68,75,77,78,81,83,84,87,93,94,96,97,99,100,102,116,120,121,126,127,130,132,135,136,140,142,160,163,164,171,180,181,182,189,191,194,197,199,200,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,241,256,257,258,261,263,266,268,272,279,281,285,302,305,320,323,324,327,328,330,331,336,351,353,356,357,],[-70,-62,-61,51,51,-65,67,71,51,51,51,51,51,-60,51,51,114,119,-78,124,125,129,-136,-135,-112,-104,-101,-134,-103,-107,-139,-137,174,-64,177,51,-51,51,-106,-129,-128,-102,-130,-127,51,51,232,-76,-75,-77,-52,129,-139,262,-108,265,-131,-138,-123,-126,-113,-122,-121,-119,-120,-116,-117,-118,-115,-114,-125,-124,51,-56,-54,-55,-132,-110,-133,-105,51,51,314,51,-53,329,340,342,343,346,-109,-99,-111,51,51,361,364,-100,]),'GT':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,155,-137,-106,155,155,155,-102,-130,-127,155,155,-108,-131,-138,155,-126,-113,155,155,-119,-120,-116,-117,-118,-115,-114,-125,155,155,-132,-110,-133,-105,155,-134,155,155,155,-109,-99,-111,155,-100,155,]),'NEW':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,248,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-95,-80,86,86,86,86,-79,86,-86,86,-94,86,-87,-92,-96,86,-88,-90,-97,-98,-91,-89,-93,]),'RIGHTSHIFT':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,158,-137,-106,158,158,158,-102,-130,-127,158,158,-108,-131,-138,158,-126,-113,158,158,158,158,-116,158,158,-115,-114,-125,158,158,-132,-110,-133,-105,158,-134,158,158,158,-109,-99,-111,158,-100,158,]),'DOT':([5,20,22,61,83,84,87,93,94,96,97,99,100,102,132,140,199,201,205,261,263,266,268,305,328,330,331,357,],[-70,-62,-61,-60,-136,-135,134,-104,-101,-134,-103,-107,-139,-137,-106,-102,-108,-131,-138,-132,-110,-133,-105,-134,-109,-99,-111,-100,]),'LEFTSHIFT':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,146,-137,-106,146,146,146,-102,-130,-127,146,146,-108,-131,-138,146,-126,-113,146,146,146,146,-116,146,146,-115,-114,-125,146,146,-132,-110,-133,-105,146,-134,146,146,146,-109,-99,-111,146,-100,146,]),'INCR':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,248,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-95,-80,89,89,89,89,-79,89,-86,89,-94,89,-87,-92,-96,89,-88,-90,-97,-98,-91,-89,-93,]),'LE':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,151,-137,-106,151,151,151,-102,-130,-127,151,151,-108,-131,-138,151,-126,-113,151,151,-119,-120,-116,-117,-118,-115,-114,-125,151,151,-132,-110,-133,-105,151,-134,151,151,151,-109,-99,-111,151,-100,151,]),'SEMI':([5,20,22,32,34,40,50,52,55,61,68,75,76,77,83,84,87,93,94,96,97,99,100,101,102,104,126,130,132,135,136,140,142,160,162,163,164,168,180,181,182,183,187,193,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,251,261,263,266,268,272,279,292,308,319,326,328,330,331,336,341,349,357,362,374,],[-70,-62,-61,-2,56,62,73,-72,-2,-60,117,-78,-71,-74,-136,-135,-112,-104,-101,-134,-103,-107,-139,149,-137,161,-2,-2,-106,-129,-128,-102,-130,-127,220,-2,-2,229,-76,-75,-77,-73,255,260,-108,-131,-138,-123,-126,-113,-122,-121,-119,-120,-116,-117,-118,-115,-114,-125,-124,270,271,299,-132,-110,-133,-105,-2,-2,321,332,339,345,-109,-99,-111,-2,352,358,-100,368,376,]),'STATIC_CAST':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,248,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-95,-80,90,90,90,90,-79,90,-86,90,-94,90,-87,-92,-96,90,-88,-90,-97,-98,-91,-89,-93,]),')':([5,20,22,44,45,49,52,53,57,58,59,60,61,63,64,66,72,75,76,77,78,79,80,81,82,83,84,87,93,94,96,97,99,100,102,106,107,108,109,111,112,113,116,120,125,127,129,132,135,136,138,140,142,143,160,180,181,182,183,184,186,189,190,191,192,194,195,196,197,199,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,240,241,256,257,258,261,262,263,264,266,267,268,285,290,302,303,304,305,306,307,317,322,325,328,330,331,347,351,353,354,357,359,367,371,],[-70,-62,-61,-2,-65,-2,-72,-2,-2,-2,110,-2,-60,-2,-2,115,122,-78,-71,-74,-49,126,-50,-58,130,-136,-135,-112,-104,-101,-134,-103,-107,-139,-137,163,164,165,166,168,169,170,173,-64,-2,-51,-2,-106,-129,-128,201,-102,-130,-2,-127,-76,-75,-77,-73,-48,-50,-52,-57,-58,-59,-139,261,-85,-84,-108,-131,266,268,-138,-123,-126,-113,-122,-121,-119,-120,-116,-117,-118,-115,-114,-125,-124,289,-2,-56,-54,-55,-132,-2,-110,-2,-133,-2,-105,-2,319,-53,-83,328,-134,330,331,337,341,344,-109,-99,-111,357,-2,360,362,-100,365,373,374,]),'(':([4,5,8,9,10,17,18,19,23,24,26,32,35,54,85,88,89,90,91,92,98,100,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,199,203,242,243,245,246,247,248,249,250,252,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[28,-70,29,30,31,36,37,38,41,42,43,53,57,91,131,91,91,137,91,139,91,143,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,264,267,291,91,294,295,91,-95,297,298,301,-80,91,91,91,91,-79,91,-86,91,-94,91,-87,-92,-96,91,-88,-90,-97,-98,-91,-89,-93,]),'IS_INVALID':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,248,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-95,-80,92,92,92,92,-79,92,-86,92,-94,92,-87,-92,-96,92,-88,-90,-97,-98,-91,-89,-93,]),'NE':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,148,-137,-106,148,148,148,-102,-130,-127,148,148,-108,-131,-138,148,-126,-113,-122,-121,-119,-120,-116,-117,-118,-115,-114,-125,148,148,-132,-110,-133,-105,148,-134,148,148,148,-109,-99,-111,148,-100,148,]),'OUT_PORT':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[9,9,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,9,-18,-16,-79,-20,9,-19,-21,-13,-8,-15,-12,-9,-11,]),'ENQUEUE':([179,247,248,253,293,299,321,345,352,355,366,368,369,370,372,375,376,],[246,246,-95,-80,-79,-86,-94,-87,-92,-96,-88,-90,-97,-98,-91,-89,-93,]),'LT':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,154,-137,-106,154,154,154,-102,-130,-127,154,154,-108,-131,-138,154,-126,-113,154,154,-119,-120,-116,-117,-118,-115,-114,-125,154,154,-132,-110,-133,-105,154,-134,154,154,154,-109,-99,-111,154,-100,154,]),'DOUBLE_COLON':([5,20,22,61,95,100,],[-70,39,-61,-60,141,-61,]),'PLUS':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,156,-137,-106,156,156,156,-102,-130,-127,156,156,-108,-131,-138,156,156,-113,156,156,156,156,-116,156,156,-115,-114,156,156,156,-132,-110,-133,-105,156,-134,156,156,156,-109,-99,-111,156,-100,156,]),'DECR':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,248,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-95,-80,88,88,88,88,-79,88,-86,88,-94,88,-87,-92,-96,88,-88,-90,-97,-98,-91,-89,-93,]),'ACTION':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[10,10,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,10,-18,-16,-79,-20,10,-19,-21,-13,-8,-15,-12,-9,-11,]),':':([5,100,110,166,335,],[-70,144,167,224,144,]),'=':([5,74,],[-70,123,]),'ASSIGN':([5,20,22,32,55,61,83,84,87,93,94,96,97,99,100,102,127,132,135,136,140,142,160,189,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,279,328,330,331,357,],[-70,-62,-61,54,105,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,-137,188,-106,-129,-128,-102,-130,-127,259,-108,-131,-138,-123,-126,-113,-122,-121,-119,-120,-116,-117,-118,-115,-114,-125,-124,300,-132,-110,-133,-105,54,-109,-99,-111,-100,]),'$end':([0,1,2,5,6,7,12,13,15,25,27,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,286,288,293,309,313,315,318,334,338,339,348,350,],[-2,-2,-29,-70,0,-34,-5,-3,-39,-1,-4,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,-18,-16,-79,-20,-19,-21,-13,-8,-15,-12,-9,-11,]),'IDENT':([0,1,2,3,5,7,11,15,16,20,22,28,29,30,31,33,36,37,38,39,41,42,43,45,47,51,53,54,56,57,61,62,67,68,71,73,81,86,88,89,91,95,98,100,103,105,114,117,119,120,123,124,125,128,129,131,133,134,137,139,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,167,172,173,174,177,178,179,185,220,223,224,225,227,229,230,231,232,233,235,237,238,239,243,247,248,253,254,255,260,262,264,265,267,269,270,271,274,278,283,286,288,289,291,293,294,295,297,298,299,300,301,309,311,313,314,315,318,321,329,332,334,338,339,340,342,343,345,348,350,352,355,358,361,366,368,369,370,372,375,376,],[5,5,-29,-63,-70,-34,5,-39,5,-62,-61,5,5,5,5,5,5,5,5,5,5,5,5,-65,5,5,5,5,-6,5,-60,-7,5,5,5,-30,5,5,5,5,5,5,5,-61,5,5,5,5,5,-64,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-32,5,5,5,5,5,5,5,5,5,5,-31,5,5,5,5,5,-10,5,5,-33,5,5,5,5,-17,5,5,5,-26,5,-27,-28,5,5,5,-95,-80,-41,-36,-38,5,5,5,5,-40,-35,-37,5,5,5,-18,-16,5,5,-79,5,5,5,5,-86,5,5,-20,5,-19,5,-21,5,-94,5,-44,-8,-15,-12,5,5,5,-87,-9,-11,-92,-96,-47,5,-88,-90,-97,-98,-91,-89,-93,]),'PROTOCOL':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[14,14,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,14,-18,-16,-79,-20,14,-19,-21,-13,-8,-15,-12,-9,-11,]),'STRING':([14,21,51,54,88,89,91,98,103,105,123,124,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,188,243,247,248,253,259,262,264,265,267,293,298,299,300,321,329,345,346,352,355,361,364,366,368,369,370,372,375,376,],[34,40,75,96,96,96,96,96,96,96,181,75,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,256,96,96,-95,-80,302,96,96,305,96,-79,96,-86,96,-94,96,-87,356,-92,-96,96,371,-88,-90,-97,-98,-91,-89,-93,]),'STALL_AND_WAIT':([179,247,248,253,293,299,321,345,352,355,366,368,369,370,372,375,376,],[249,249,-95,-80,-79,-86,-94,-87,-92,-96,-88,-90,-97,-98,-91,-89,-93,]),'OOD':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,248,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-95,-80,99,99,99,99,-79,99,-86,99,-94,99,-87,-92,-96,99,-88,-90,-97,-98,-91,-89,-93,]),'ENUM':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[17,17,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,17,-18,-16,-79,-20,17,-19,-21,-13,-8,-15,-12,-9,-11,]),'ELSE':([253,293,355,],[-80,-79,363,]),'MACHINE':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[18,18,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,18,-18,-16,-79,-20,18,-19,-21,-13,-8,-15,-12,-9,-11,]),'GE':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,152,-137,-106,152,152,152,-102,-130,-127,152,152,-108,-131,-138,152,-126,-113,152,152,-119,-120,-116,-117,-118,-115,-114,-125,152,152,-132,-110,-133,-105,152,-134,152,152,152,-109,-99,-111,152,-100,152,]),'EXTERN_TYPE':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[19,19,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,19,-18,-16,-79,-20,19,-19,-21,-13,-8,-15,-12,-9,-11,]),'[':([5,20,22,61,83,84,87,93,94,96,97,99,100,102,132,140,199,201,205,261,263,266,268,305,328,330,331,357,],[-70,-62,-61,-60,-136,-135,133,-104,-101,-134,-103,-107,-139,-137,-106,-102,-108,-131,-138,-132,-110,-133,-105,-134,-109,-99,-111,-100,]),'INCLUDE':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[21,21,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,21,-18,-16,-79,-20,21,-19,-21,-13,-8,-15,-12,-9,-11,]),']':([5,20,22,61,83,84,87,93,94,96,97,99,100,102,132,133,135,136,140,142,160,196,197,198,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,261,262,263,266,268,303,328,330,331,357,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,-137,-106,-2,-129,-128,-102,-130,-127,-85,-84,263,-108,-131,-138,-123,-126,-113,-122,-121,-119,-120,-116,-117,-118,-115,-114,-125,-124,-132,-2,-110,-133,-105,-83,-109,-99,-111,-100,]),'IF':([179,247,248,253,293,299,321,345,352,355,363,366,368,369,370,372,375,376,],[250,250,-95,-80,-79,-86,-94,-87,-92,-96,250,-88,-90,-97,-98,-91,-89,-93,]),'AND':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,145,-137,-106,145,145,145,-102,-130,-127,145,145,-108,-131,-138,-123,-126,-113,-122,-121,-119,-120,-116,-117,-118,-115,-114,-125,-124,145,-132,-110,-133,-105,145,-134,145,145,145,-109,-99,-111,145,-100,145,]),'DASH':([5,20,22,54,61,83,84,87,88,89,91,93,94,96,97,98,99,100,101,102,103,105,132,133,135,136,138,140,142,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,162,179,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,243,247,248,251,253,261,262,263,264,265,266,267,268,292,293,298,299,300,305,306,321,325,326,328,329,330,331,345,347,352,355,357,361,366,367,368,369,370,372,375,376,],[-70,-62,-61,98,-60,-136,-135,-112,98,98,98,-104,-101,-134,-103,98,-107,-139,153,-137,98,98,-106,98,153,153,153,-102,-130,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-127,153,98,153,-108,-131,-138,153,153,-113,153,153,153,153,-116,153,153,-115,-114,153,153,98,98,-95,153,-80,-132,98,-110,98,98,-133,98,-105,153,-79,98,-86,98,-134,153,-94,153,153,-109,98,-99,-111,-87,153,-92,-96,-100,98,-88,153,-90,-97,-98,-91,-89,-93,]),'RETURN':([179,247,248,253,293,299,321,345,352,355,366,368,369,370,372,375,376,],[243,243,-95,-80,-79,-86,-94,-87,-92,-96,-88,-90,-97,-98,-91,-89,-93,]),'EQ':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,150,-137,-106,150,150,150,-102,-130,-127,150,150,-108,-131,-138,150,-126,-113,-122,-121,-119,-120,-116,-117,-118,-115,-114,-125,150,150,-132,-110,-133,-105,150,-134,150,150,150,-109,-99,-111,150,-100,150,]),'STRUCT':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[23,23,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,23,-18,-16,-79,-20,23,-19,-21,-13,-8,-15,-12,-9,-11,]),'CHECK_STOP_SLOTS':([179,247,248,253,293,299,321,345,352,355,366,368,369,370,372,375,376,],[252,252,-95,-80,-79,-86,-94,-87,-92,-96,-88,-90,-97,-98,-91,-89,-93,]),'STATE_DECL':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[24,24,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,24,-18,-16,-79,-20,24,-19,-21,-13,-8,-15,-12,-9,-11,]),'CHECK_ALLOCATE':([179,247,248,253,293,299,321,345,352,355,366,368,369,370,372,375,376,],[245,245,-95,-80,-79,-86,-94,-87,-92,-96,-88,-90,-97,-98,-91,-89,-93,]),'LIT_BOOL':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,188,243,247,248,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,258,102,102,-95,-80,102,102,102,102,-79,102,-86,102,-94,102,-87,-92,-96,102,-88,-90,-97,-98,-91,-89,-93,]),'IS_VALID':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,248,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-95,-80,85,85,85,85,-79,85,-86,85,-94,85,-87,-92,-96,85,-88,-90,-97,-98,-91,-89,-93,]),'NOT':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,248,253,262,264,265,267,293,298,299,300,321,329,345,352,355,361,366,368,369,370,372,375,376,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-95,-80,103,103,103,103,-79,103,-86,103,-94,103,-87,-92,-96,103,-88,-90,-97,-98,-91,-89,-93,]),'{':([5,29,37,45,52,67,73,75,76,77,115,120,122,126,149,161,163,165,167,169,170,173,180,181,182,183,187,220,221,224,225,226,228,239,276,277,289,318,337,344,360,363,365,373,],[-70,47,47,-65,-72,47,-30,-78,-71,-74,172,-64,179,-2,-32,-31,-2,223,-2,230,231,47,-76,-75,-77,-73,179,-33,179,-2,-2,278,-23,47,311,-22,47,47,179,179,179,179,179,179,]),'}':([1,2,5,7,12,13,15,27,45,47,56,62,68,69,70,73,117,118,119,120,149,161,172,175,176,178,179,220,223,229,230,231,233,234,235,236,237,238,239,244,247,248,253,254,255,260,269,270,271,273,274,275,278,280,282,283,284,286,287,288,293,296,299,309,310,311,312,313,315,316,318,321,332,333,334,338,339,345,348,350,352,355,358,366,368,369,370,372,375,376,],[-2,-29,-70,-34,-5,-3,-39,-4,-65,-2,-6,-7,-2,120,-69,-30,-2,-68,-2,-64,-32,-31,-2,-66,-67,-10,253,-33,-2,-17,-2,-2,-26,286,-2,-25,-27,-28,-14,293,-82,-95,-80,-41,-36,-38,-40,-35,-37,309,-2,-43,-2,313,315,-2,-46,-18,-24,-16,-79,-81,-86,-20,-42,-2,334,-19,-21,-45,-13,-94,-44,348,-8,-15,-12,-87,-9,-11,-92,-96,-47,-88,-90,-97,-98,-91,-89,-93,]),'OR':([5,20,22,61,83,84,87,93,94,96,97,99,100,101,102,132,135,136,138,140,142,160,162,197,199,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,261,263,266,268,292,305,306,325,326,328,330,331,347,357,367,],[-70,-62,-61,-60,-136,-135,-112,-104,-101,-134,-103,-107,-139,159,-137,-106,159,159,159,-102,-130,-127,159,159,-108,-131,-138,-123,-126,-113,-122,-121,-119,-120,-116,-117,-118,-115,-114,-125,-124,159,-132,-110,-133,-105,159,-134,159,159,159,-109,-99,-111,159,-100,159,]),'IN_PORT':([0,1,2,5,7,15,45,56,62,73,120,149,161,178,220,229,239,253,254,255,260,269,270,271,278,286,288,293,309,311,313,315,318,334,338,339,348,350,],[26,26,-29,-70,-34,-39,-65,-6,-7,-30,-64,-32,-31,-10,-33,-17,-14,-80,-41,-36,-38,-40,-35,-37,26,-18,-16,-79,-20,26,-19,-21,-13,-8,-15,-12,-9,-11,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([0,1,278,311,],[1,1,1,1,]),'obj_decl':([0,1,167,172,224,225,230,235,278,311,],[2,2,225,233,225,225,233,233,2,2,]),'statements':([122,187,221,337,344,360,363,365,373,],[178,254,269,350,355,366,369,372,375,]),'type_enums':([223,274,],[273,310,]),'pairsx':([51,124,],[76,183,]),'type_members':([172,230,235,],[234,280,287,]),'statements_inner':([179,247,],[244,296,]),'enumeration':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,262,264,265,267,298,300,314,329,361,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,336,93,93,]),'file':([0,],[6,]),'type_state':([231,283,],[283,283,]),'type_member':([172,230,235,],[235,235,235,]),'aexpr':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,262,264,265,267,298,300,329,361,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'param':([53,57,125,],[78,78,78,]),'literal':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,262,264,265,267,298,300,329,361,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'params':([53,57,125,],[79,106,184,]),'statement':([179,247,],[247,247,]),'var':([54,88,89,91,98,103,105,131,133,139,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,177,179,232,243,247,262,264,265,267,291,294,295,297,298,300,301,329,343,361,],[94,94,94,94,94,94,94,195,94,202,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,241,94,285,94,94,94,94,94,94,320,322,323,324,94,94,327,94,354,94,]),'if_statement':([179,247,363,],[248,248,370,]),'type':([0,1,28,36,38,41,42,53,54,57,71,86,88,89,91,98,103,105,114,125,129,133,137,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,167,172,179,224,225,230,235,243,247,262,264,265,267,278,298,300,311,329,340,342,361,],[11,11,44,58,60,63,64,81,95,81,121,132,95,95,95,95,95,95,171,185,191,95,200,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,227,11,95,227,227,11,11,95,95,95,95,95,95,11,95,95,11,95,351,353,95,]),'empty':([0,1,32,44,47,49,53,55,57,58,59,60,63,64,68,117,119,125,126,129,130,133,143,163,164,167,172,223,224,225,230,231,235,241,262,264,267,272,274,278,279,283,285,311,336,351,],[12,12,52,52,70,52,80,52,80,52,52,52,52,52,70,70,70,186,52,192,52,196,196,52,52,228,236,275,228,228,236,284,236,52,196,196,196,52,275,12,52,284,52,12,52,52,]),'declsx':([0,1,278,311,],[13,27,13,13,]),'func_decl':([0,1,172,230,235,278,311,],[7,7,237,237,237,7,7,]),'func_def':([0,1,172,230,235,278,311,],[15,15,238,238,238,15,15,]),'idents':([29,37,67,173,239,289,318,],[46,59,116,239,288,318,338,]),'void':([0,1,172,230,235,278,311,],[16,16,16,16,16,16,16,]),'identx':([47,68,117,119,],[69,118,175,176,]),'type_states':([231,283,],[282,316,]),'pair':([51,124,],[77,77,]),'type_enum':([223,274,],[274,274,]),'typestr':([0,1,28,36,38,41,42,53,54,57,71,86,88,89,91,98,103,105,114,125,129,133,137,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,167,172,179,224,225,230,235,243,247,262,264,265,267,278,298,300,311,329,340,342,361,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'types':([53,57,129,],[82,107,190,]),'pairs':([32,44,49,55,58,59,60,63,64,126,130,163,164,241,272,279,285,336,351,],[50,66,72,104,108,109,111,112,113,187,193,221,222,290,308,50,317,349,359,]),'ident':([0,1,11,16,28,29,30,31,33,36,37,38,39,41,42,43,47,51,53,54,57,67,68,71,81,86,88,89,91,95,98,103,105,114,117,119,123,124,125,128,129,131,133,134,137,139,141,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,167,172,173,174,177,179,185,223,224,225,227,230,231,232,235,239,243,247,262,264,265,267,274,278,283,289,291,294,295,297,298,300,301,311,314,318,329,340,342,343,361,],[22,22,32,35,22,45,48,49,55,22,45,22,61,22,22,65,68,74,22,100,22,45,68,22,127,22,100,100,100,140,100,100,100,22,68,68,180,74,22,189,22,194,100,199,22,194,203,100,205,100,100,100,100,100,100,100,100,100,100,100,100,100,100,22,22,45,240,194,100,127,272,22,22,279,22,281,194,22,45,100,100,100,100,100,100,272,22,281,45,194,194,194,194,100,100,194,22,335,45,100,22,22,194,100,]),'obj_decls':([167,224,225,],[226,276,277,]),'expr':([54,88,89,91,98,103,105,133,143,145,146,147,148,150,151,152,153,154,155,156,157,158,159,179,243,247,262,264,265,267,298,300,329,361,],[101,135,136,138,142,160,162,197,197,206,207,208,209,210,211,212,213,214,215,216,217,218,219,251,292,251,197,197,306,197,325,326,347,367,]),'exprs':([133,143,262,264,267,],[198,204,303,304,307,]),'decls':([0,278,311,],[25,312,333,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> decls','file',1,'p_file','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',218),
  ('empty -> <empty>','empty',0,'p_empty','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',222),
  ('decls -> declsx','decls',1,'p_decls','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',225),
  ('declsx -> decl declsx','declsx',2,'p_declsx__list','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',229),
  ('declsx -> empty','declsx',1,'p_declsx__none','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',239),
  ('decl -> PROTOCOL STRING SEMI','decl',3,'p_decl__protocol','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',243),
  ('decl -> INCLUDE STRING SEMI','decl',3,'p_decl__include','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',252),
  ('decl -> MACHINE ( idents ) : obj_decls { decls }','decl',9,'p_decl__machine0','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',261),
  ('decl -> MACHINE ( idents pairs ) : obj_decls { decls }','decl',10,'p_decl__machine1','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',265),
  ('decl -> ACTION ( ident pairs ) statements','decl',6,'p_decl__action','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',269),
  ('decl -> IN_PORT ( ident , type , var pairs ) statements','decl',10,'p_decl__in_port','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',273),
  ('decl -> OUT_PORT ( ident , type , var pairs ) SEMI','decl',10,'p_decl__out_port','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',277),
  ('decl -> TRANS ( idents , idents , ident ) idents','decl',9,'p_decl__trans0','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',281),
  ('decl -> TRANS ( idents , idents ) idents','decl',7,'p_decl__trans1','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',285),
  ('decl -> TRANS ( idents , idents , ident ) idents idents','decl',10,'p_decl__trans2','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',289),
  ('decl -> TRANS ( idents , idents ) idents idents','decl',8,'p_decl__trans3','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',293),
  ('decl -> EXTERN_TYPE ( type pairs ) SEMI','decl',6,'p_decl__extern0','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',297),
  ('decl -> GLOBAL ( type pairs ) { type_members }','decl',8,'p_decl__global','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',302),
  ('decl -> STRUCT ( type pairs ) { type_members }','decl',8,'p_decl__struct','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',307),
  ('decl -> ENUM ( type pairs ) { type_enums }','decl',8,'p_decl__enum','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',311),
  ('decl -> STATE_DECL ( type pairs ) { type_states }','decl',8,'p_decl__state_decl','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',316),
  ('obj_decls -> obj_decl obj_decls','obj_decls',2,'p_obj_decls__list','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',323),
  ('obj_decls -> empty','obj_decls',1,'p_obj_decls__empty','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',327),
  ('type_members -> type_member type_members','type_members',2,'p_type_members__list','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',331),
  ('type_members -> empty','type_members',1,'p_type_members__empty','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',335),
  ('type_member -> obj_decl','type_member',1,'p_type_member__0','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',339),
  ('type_member -> func_decl','type_member',1,'p_type_member__0','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',340),
  ('type_member -> func_def','type_member',1,'p_type_member__0','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',341),
  ('decl -> obj_decl','decl',1,'p_decl__obj_decl','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',346),
  ('obj_decl -> type ident pairs SEMI','obj_decl',4,'p_obj_decl__0','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',350),
  ('obj_decl -> type STAR ident pairs SEMI','obj_decl',5,'p_obj_decl__1','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',354),
  ('obj_decl -> type ident ASSIGN expr SEMI','obj_decl',5,'p_obj_decl__2','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',358),
  ('obj_decl -> type STAR ident ASSIGN expr SEMI','obj_decl',6,'p_obj_decl__3','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',363),
  ('decl -> func_decl','decl',1,'p_decl__func_decl','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',369),
  ('func_decl -> void ident ( params ) pairs SEMI','func_decl',7,'p_func_decl__0','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',373),
  ('func_decl -> type ident ( params ) pairs SEMI','func_decl',7,'p_func_decl__0','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',374),
  ('func_decl -> void ident ( types ) pairs SEMI','func_decl',7,'p_func_decl__1','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',378),
  ('func_decl -> type ident ( types ) pairs SEMI','func_decl',7,'p_func_decl__1','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',379),
  ('decl -> func_def','decl',1,'p_decl__func_def','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',383),
  ('func_def -> void ident ( params ) pairs statements','func_def',7,'p_func_def__0','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',387),
  ('func_def -> type ident ( params ) pairs statements','func_def',7,'p_func_def__0','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',388),
  ('type_enums -> type_enum type_enums','type_enums',2,'p_type_enums__list','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',393),
  ('type_enums -> empty','type_enums',1,'p_type_enums__empty','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',397),
  ('type_enum -> ident pairs SEMI','type_enum',3,'p_type_enum','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',401),
  ('type_states -> type_state type_states','type_states',2,'p_type_states__list','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',406),
  ('type_states -> empty','type_states',1,'p_type_states__empty','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',410),
  ('type_state -> ident , enumeration pairs SEMI','type_state',5,'p_type_state','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',414),
  ('params -> param , params','params',3,'p_params__many','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',419),
  ('params -> param','params',1,'p_params__one','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',423),
  ('params -> empty','params',1,'p_params__none','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',427),
  ('param -> type ident','param',2,'p_param','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',431),
  ('param -> type STAR ident','param',3,'p_param__pointer','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',435),
  ('param -> type STAR ident ASSIGN STRING','param',5,'p_param__pointer_default','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',439),
  ('param -> type ident ASSIGN NUMBER','param',4,'p_param__default_number','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',443),
  ('param -> type ident ASSIGN LIT_BOOL','param',4,'p_param__default_bool','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',447),
  ('param -> type ident ASSIGN STRING','param',4,'p_param__default_string','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',451),
  ('types -> type , types','types',3,'p_types__multiple','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',456),
  ('types -> type','types',1,'p_types__one','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',460),
  ('types -> empty','types',1,'p_types__empty','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',464),
  ('typestr -> typestr DOUBLE_COLON ident','typestr',3,'p_typestr__multi','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',468),
  ('typestr -> ident','typestr',1,'p_typestr__single','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',472),
  ('type -> typestr','type',1,'p_type__one','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',476),
  ('void -> VOID','void',1,'p_void','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',480),
  ('idents -> { identx }','idents',3,'p_idents__braced','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',485),
  ('idents -> ident','idents',1,'p_idents__bare','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',489),
  ('identx -> ident SEMI identx','identx',3,'p_identx__multiple_1','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',493),
  ('identx -> ident , identx','identx',3,'p_identx__multiple_1','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',494),
  ('identx -> ident identx','identx',2,'p_identx__multiple_2','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',498),
  ('identx -> empty','identx',1,'p_identx__single','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',502),
  ('ident -> IDENT','ident',1,'p_ident','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',506),
  ('pairs -> , pairsx','pairs',2,'p_pairs__list','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',511),
  ('pairs -> empty','pairs',1,'p_pairs__empty','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',515),
  ('pairsx -> pair , pairsx','pairsx',3,'p_pairsx__many','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',519),
  ('pairsx -> pair','pairsx',1,'p_pairsx__one','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',524),
  ('pair -> ident = STRING','pair',3,'p_pair__assign','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',529),
  ('pair -> ident = ident','pair',3,'p_pair__assign','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',530),
  ('pair -> ident = NUMBER','pair',3,'p_pair__assign','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',531),
  ('pair -> STRING','pair',1,'p_pair__literal','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',535),
  ('statements -> { statements_inner }','statements',3,'p_statements__inner','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',540),
  ('statements -> { }','statements',2,'p_statements__none','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',544),
  ('statements_inner -> statement statements_inner','statements_inner',2,'p_statements_inner__many','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',548),
  ('statements_inner -> statement','statements_inner',1,'p_statements_inner__one','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',552),
  ('exprs -> expr , exprs','exprs',3,'p_exprs__multiple','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',556),
  ('exprs -> expr','exprs',1,'p_exprs__one','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',560),
  ('exprs -> empty','exprs',1,'p_exprs__empty','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',564),
  ('statement -> expr SEMI','statement',2,'p_statement__expression','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',568),
  ('statement -> expr ASSIGN expr SEMI','statement',4,'p_statement__assign','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',572),
  ('statement -> ENQUEUE ( var , type ) statements','statement',7,'p_statement__enqueue','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',576),
  ('statement -> ENQUEUE ( var , type , expr ) statements','statement',9,'p_statement__enqueue_latency','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',580),
  ('statement -> STALL_AND_WAIT ( var , var ) SEMI','statement',7,'p_statement__stall_and_wait','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',584),
  ('statement -> PEEK ( var , type pairs ) statements','statement',8,'p_statement__peek','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',588),
  ('statement -> CHECK_ALLOCATE ( var ) SEMI','statement',5,'p_statement__check_allocate','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',592),
  ('statement -> CHECK_STOP_SLOTS ( var , STRING , STRING ) SEMI','statement',9,'p_statement__check_stop','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',596),
  ('statement -> RETURN expr SEMI','statement',3,'p_statement__return','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',600),
  ('statement -> if_statement','statement',1,'p_statement__if','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',604),
  ('if_statement -> IF ( expr ) statements','if_statement',5,'p_if_statement__if','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',608),
  ('if_statement -> IF ( expr ) statements ELSE statements','if_statement',7,'p_if_statement__if_else','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',612),
  ('if_statement -> IF ( expr ) statements ELSE if_statement','if_statement',7,'p_statement__if_else_if','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',616),
  ('aexpr -> STATIC_CAST ( type , expr )','aexpr',6,'p_expr__static_cast','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',621),
  ('aexpr -> STATIC_CAST ( type , STRING , expr )','aexpr',8,'p_expr__static_cast_ptr','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',625),
  ('aexpr -> var','aexpr',1,'p_expr__var','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',629),
  ('aexpr -> type ident','aexpr',2,'p_expr__localvar','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',633),
  ('aexpr -> literal','aexpr',1,'p_expr__literal','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',637),
  ('aexpr -> enumeration','aexpr',1,'p_expr__enumeration','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',641),
  ('aexpr -> ident ( exprs )','aexpr',4,'p_expr__func_call','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',645),
  ('aexpr -> NEW type','aexpr',2,'p_expr__new','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',649),
  ('aexpr -> OOD','aexpr',1,'p_expr__null','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',653),
  ('aexpr -> aexpr DOT ident','aexpr',3,'p_expr__member','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',657),
  ('aexpr -> aexpr DOT ident ( exprs )','aexpr',6,'p_expr__member_method_call','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',661),
  ('aexpr -> aexpr [ exprs ]','aexpr',4,'p_expr__member_method_call_lookup','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',665),
  ('aexpr -> type DOUBLE_COLON ident ( exprs )','aexpr',6,'p_expr__class_method_call','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',669),
  ('expr -> aexpr','expr',1,'p_expr__aexpr','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',673),
  ('expr -> expr STAR expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',677),
  ('expr -> expr SLASH expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',678),
  ('expr -> expr PLUS expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',679),
  ('expr -> expr DASH expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',680),
  ('expr -> expr LT expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',681),
  ('expr -> expr GT expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',682),
  ('expr -> expr LE expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',683),
  ('expr -> expr GE expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',684),
  ('expr -> expr EQ expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',685),
  ('expr -> expr NE expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',686),
  ('expr -> expr AND expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',687),
  ('expr -> expr OR expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',688),
  ('expr -> expr RIGHTSHIFT expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',689),
  ('expr -> expr LEFTSHIFT expr','expr',3,'p_expr__binary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',690),
  ('expr -> NOT expr','expr',2,'p_expr__unary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',695),
  ('expr -> INCR expr','expr',2,'p_expr__unary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',696),
  ('expr -> DECR expr','expr',2,'p_expr__unary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',697),
  ('expr -> DASH expr','expr',2,'p_expr__unary_op','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',698),
  ('aexpr -> ( expr )','aexpr',3,'p_expr__parens','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',702),
  ('aexpr -> IS_VALID ( var )','aexpr',4,'p_expr__is_valid_ptr','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',706),
  ('aexpr -> IS_INVALID ( var )','aexpr',4,'p_expr__is_invalid_ptr','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',710),
  ('literal -> STRING','literal',1,'p_literal__string','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',714),
  ('literal -> NUMBER','literal',1,'p_literal__number','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',718),
  ('literal -> FLOATNUMBER','literal',1,'p_literal__float','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',722),
  ('literal -> LIT_BOOL','literal',1,'p_literal__bool','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',726),
  ('enumeration -> ident : ident','enumeration',3,'p_enumeration','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',730),
  ('var -> ident','var',1,'p_var','/home/kemmere2/gem5/gem5-stable/src/mem/slicc/parser.py',734),
]
